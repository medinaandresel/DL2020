atomt1(U,null,null) :- unat(U,X),deriv(t1,U,null,null),conc(U).
atomt1(U,null,null) :- binat(U,X,Y),deriv(t1,U,null,null),role(U).

atomt1(U,X,null) :- unat(U,X),deriv(t1,U,X1,null),conc(U).
atomt1(U,X,null) :- binat(U,X,Y),deriv(t1,U,X1,null),role(U).
atomt1(U,null,X) :- binat(U,Y,X),deriv(t1,U,null,X1),role(U).
atomt1(U,X,Y) :- binat(U,X,Y),deriv(t1,U,X1,Y1),role(U).



atomt2(U,null,null) :- unat(U,X),deriv(t2,U,null,null),conc(U).
atomt2(U,null,null) :- binat(U,X,Y),deriv(t2,U,null,null),role(U).

atomt2(U,X,null) :- unat(U,X),deriv(t2,U,X1,null),conc(U).
atomt2(U,X,null) :- binat(U,X,Y),deriv(t2,U,X1,null),role(U).
atomt2(U,null,X) :- binat(U,Y,X),deriv(t2,U,null,X1),role(U).
atomt2(U,X,Y) :- binat(U,X,Y),deriv(t2,U,X1,Y1),role(U). 

query(Ut1,Ut2,Y) :- atomt1(Ut1,X,null),atomt2(Ut2,Y,X), Y != null.

 
spe(V,U,X,Y) :- spe(V,U1,X,Y),risa(U,U1). 
spe(V,U,Y,X) :- spe(V,U1,X,Y),inv(U,U1). 
spe(V,U,X,Y) :- spe(V,U1,X,Y),cisa(U,U1),conc(U1). 
spe(V,U,X,null) :- spe(V,U1,X,null),cisa(U,U1),role(U1),conc(U). 
spe(V,A1,X,null) :- spe(V,A2,X,null), ddn(A2,A1,R),deriv(V2,R,Y,X), V != V2, nonAns(X). 
%spe(V,Y,X,null) :- spe(V,A,X,null), unat(A,Y). 
%spe(V,Y,X,null) :- spe(V,R,X,null), binat(R,Y,Z), X != null. 
%spe(V,Z,null,X) :- spe(V,R,null,X), binat(R,Y,Z), X != null. 
deriv(V,U,X,Y):-spe(V,U,X,Y). 
gen(V,U,X,Y) :- gen(V,U1,X,Y),risa(U1,U). 
%spe(V,U,X,Y) :- spe(V,U1,X,Y),inv(U,U1). 
gen(V,U1,X,Y) :- gen(V,U,X,Y),cisa(U,U1),conc(U). 
gen(V,U1,X,null) :- gen(V,U,X,null),cisa(U,U1),role(U),conc(U1). 
gen(V,A1,X,null) :- gen(V,A2,X,null), rup(A2,A1,R),deriv(V2,R,Y,X), V != V2, nonAns(X). 
gen(V,A,X,null) :- gen(V,a,X,null), unat(A,a). 
gen(V,R,X,null) :- spe(V,a,X,null), binat(R,a,b). 
gen(V,R,null,X) :- spe(V,R,null,X), binat(R,a,b). 
deriv(V,U,X,Y):-gen(V,U,X,Y). 

%%%%%%% unify two atoms %%%%%%
mgu(V1,V2,X1,X2,Y1,Y2) :-spe(V1,U,X1,Y1), spe(V2,U,X2,Y2), V1 != V2, nonAns(X1),nonAns(Y1). 
mgu(V1,V2,X1,X2,Y2,Y1) :-spe(V1,U,X1,Y1), spe(V2,U,X2,Y2), V1 != V2, nonAns(X1),nonAns(Y2). 
mgu(V1,V2,X2,X1,Y1,Y2) :-spe(V1,U,X1,Y1), spe(V2,U,X2,Y2), V1 != V2, nonAns(X2),nonAns(Y1). 
mgu(V1,V2,X2,X1,Y2,Y1) :-spe(V1,U,X1,Y1), spe(V2,U,X2,Y2), V1 != V2, nonAns(X2),nonAns(Y2). 


%%%%%%% identify invalid substitutions such as a join variable to null or x->y, y->x %%%%%%
nosubst(X1,null) :- mgu(V1,V2,X1,null,Y1,Y2), join(V1,V3,X1), V3 != V2. 
nosubst(Y1,null) :- mgu(V1,V2,X1,X2,Y1,null), join(V1,V3,X1), V3 != V2. 
nosubst(X1,X2) :- mgu(V1,V2,X1,X2,Y1,Y2), X2 == Y1, X2 != null.
nosubst(Y1,X2) :- mgu(V1,V2,X1,X2,Y1,Y2), Y2 == X1, Y2 != null. 

%%%%%% valid substitutions those that fail to be nosubst %%%%%%%
subst(X1,X2):- mgu(V1,V2,X1,X2,Y1,Y2), not nosubst(X1,X2). 
subst(Y1,Y2):- mgu(V1,V2,X1,X2,Y1,Y2), not nosubst(Y1,Y2). 

%%%%%% apply valid substitutions %%%%%%%%%%
spe(V,U,X2,Y1) :- spe(V,U,X1,Y1),subst(X1,X2). 
spe(V,U,X1,Y2) :- spe(V,U,X1,Y1),subst(Y1,Y2).

%%%%% replace by null variables that became nonshared; to enable further
%%%%% axioms applicability
nonjoin(Y) :- mgu(V1,V2,X,Y,X1,Y2), spe(V3,U,Y,Z), V3 != V2, V3 != V1.
nonjoin(Y) :- mgu(V1,V2,X,Y1,Y2,Y), spe(V3,U,Z,Y), V3 != V2, V3 != V1.
subst(Y,null) :- mgu(V1,V2,X,Y,Y1,Y2), not nonjoin(Y), nonAns(Y), Y != null.
subst(Y,null) :- mgu(V1,V2,X,Y1,Y2,Y),  not nonjoin(Y), nonAns(Y), Y != null.
 
 
join(t1,t2,v_X). join(t2,t1,v_X). nonAns(v_X). 
nonAns(v_X). 
spe(t1,stud,v_X,null). 
spe(t2,theaches,v_Y,v_X). 

cisa(r, stud). inv(theaches,r). role(r). conc(stud). conc(prof). role(theaches). 
cisa(prof, theaches). nonAns(null).

unat(prof, an).
binat(theaches,mary,john). unat(stud,john). 

%query(U1,U2,X)?

